version: '3.8'

services:
  web:
    build: .
    command: >
      sh -c "
        python manage.py wait_for_db &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        python manage.py loaddata movies/fixtures/initial_movies.json &&
        python manage.py createsuperuser --noinput --username=admin --email=admin@example.com --password=adminpass123 &&
        sh run_ci_checks.sh
      "
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    environment:
      - DEBUG=1
      - SECRET_KEY=ci_test_key
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - CSRF_TRUSTED_ORIGINS=http://localhost:8000,http://127.0.0.1:8000
      - CSRF_COOKIE_SECURE=False
      - CSRF_COOKIE_HTTPONLY=False
      - CSRF_USE_SESSIONS=False
      - CSRF_COOKIE_SAMESITE=Lax
      - DB_NAME=movies_test
      - DB_USER=movies_test
      - DB_PASSWORD=movies_test
      - DB_HOST=db
      - DB_PORT=5432
      - DJANGO_SETTINGS_MODULE=config.test_settings
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DJANGO_SUPERUSER_PASSWORD=adminpass123
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=movies_test
      - POSTGRES_USER=movies_test
      - POSTGRES_PASSWORD=movies_test
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U movies_test -d movies_test"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.21
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - web

  prometheus:
    image: prom/prometheus:v2.30.3
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume:
  media_volume:
  prometheus_data: